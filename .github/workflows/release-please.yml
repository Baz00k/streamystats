name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      major: ${{ steps.release.outputs.major }}
      minor: ${{ steps.release.outputs.minor }}
      patch: ${{ steps.release.outputs.patch }}
      sha: ${{ steps.release.outputs.sha }}
    steps:
      - name: Run release-please
        id: release
        uses: google-github-actions/release-please-action@v4
        with:
          release-type: node
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  build-and-publish:
    runs-on: ubuntu-latest
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build packages
        run: pnpm run build:all

      - name: Docker Build and Push
        env:
          DOCKER_BUILDKIT: 1
          TAG_NAME: ${{ needs.release-please.outputs.tag_name }}
        run: |
          # Set up Docker Buildx
          docker buildx create --use

          # Build and tag with version
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t streamystats-v2:latest \
            -t streamystats-v2:${TAG_NAME} \
            --push \
            -f Dockerfile.base .
        # Note: You'll need to configure your Docker registry credentials
        # Add these as repository secrets:
        # - DOCKER_USERNAME
        # - DOCKER_PASSWORD
        # And uncomment the login step below:

        # - name: Log in to Docker Registry
        #   run: |
        #     echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Create GitHub Release
        if: ${{ needs.release-please.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ needs.release-please.outputs.tag_name }} \
            --title "Release ${{ needs.release-please.outputs.tag_name }}" \
            --notes "Automated release created by release-please" \
            --verify-tag
