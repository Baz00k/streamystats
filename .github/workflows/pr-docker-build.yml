name: PR Docker Build & Push

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE_NAMESPACE: ${{ secrets.DOCKER_USERNAME }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        part:
          - streamystats-v2-nextjs
          - streamystats-v2-job-server
          - streamystats-v2-migrate
        include:
          - part: streamystats-v2-nextjs
            folder: .
            dockerfile: apps/nextjs-app/Dockerfile
          - part: streamystats-v2-job-server
            folder: .
            dockerfile: apps/job-server/Dockerfile
          - part: streamystats-v2-migrate
            folder: .
            dockerfile: migration.Dockerfile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Extract PR number
        id: pr
        run: echo "number=${{ github.event.number }}" >> $GITHUB_OUTPUT

      - name: Build and push ${{ matrix.part }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.folder }}
          file: ${{ matrix.dockerfile }}
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=pr-${{ steps.pr.outputs.number }}
            COMMIT_SHA=${{ github.sha }}
            BUILD_TIME=${{ github.event.pull_request.updated_at }}
          push: true
          tags: |
            ${{ env.IMAGE_NAMESPACE }}/${{ matrix.part }}:pr-${{ steps.pr.outputs.number }}

  summary:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: always()
    steps:
      - name: PR Build Summary
        run: |
          echo "## üöÄ PR Docker Build Complete" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**PR Number:** \`#${{ github.event.number }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**PR Title:** \`${{ github.event.pull_request.title }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** \`pr-${{ github.event.number }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Registry:** \`${{ env.REGISTRY }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Namespace:** \`${{ env.IMAGE_NAMESPACE }}\`" >> $GITHUB_STEP_SUMMARY
          echo "**Commit SHA:** \`${{ github.sha }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Built Images:" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.IMAGE_NAMESPACE }}/streamystats-v2-nextjs:pr-${{ github.event.number }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.IMAGE_NAMESPACE }}/streamystats-v2-job-server:pr-${{ github.event.number }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- \`${{ env.IMAGE_NAMESPACE }}/streamystats-v2-migrate:pr-${{ github.event.number }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Usage:" >> $GITHUB_STEP_SUMMARY
          echo "To test this PR, update your \`docker-compose.yml\` with:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "export VERSION=pr-${{ github.event.number }}" >> $GITHUB_STEP_SUMMARY
          echo "docker-compose up -d" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Add PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.payload.number;
            const namespace = process.env.IMAGE_NAMESPACE;

            const comment = `## üê≥ PR Docker Images Built

            Your PR has been built and pushed to Docker Hub with the tag \`pr-${prNumber}\`.

            ### Available Images:
            - \`${namespace}/streamystats-v2-nextjs:pr-${prNumber}\`
            - \`${namespace}/streamystats-v2-job-server:pr-${prNumber}\`
            - \`${namespace}/streamystats-v2-migrate:pr-${prNumber}\`

            ### Usage:
            \`\`\`bash
            export VERSION=pr-${prNumber}
            docker-compose up -d
            \`\`\`

            **Note:** These images will be overwritten with each new push to this PR.`;

            // Check if we already have a comment from this workflow
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
            });

            const existingComment = comments.data.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('üê≥ PR Docker Images Built')
            );

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: comment
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: prNumber,
                body: comment
              });
            }
