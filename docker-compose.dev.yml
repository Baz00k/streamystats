services:
  # Database migration service - runs once to set up tables
  migrate:
    build:
      context: .
      dockerfile: migration.Dockerfile
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@vectorchord:5432/${POSTGRES_DB:-streamystats}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-streamystats}
      - PGPASSWORD=${POSTGRES_PASSWORD:-postgres}
      - NODE_ENV=development
    volumes:
      # Mount only migrations for development - allows testing new migrations without rebuilding
      - ./packages/database/drizzle:/app/packages/database/drizzle:ro
    depends_on:
      vectorchord:
        condition: service_healthy
    restart: "no"
    networks:
      - app-network

  vectorchord:
    image: tensorchord/vchord-postgres:pg17-v0.4.1
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-streamystats}
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - vectorchord_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-streamystats}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  vectorchord_data:
    driver: local

networks:
  app-network:
